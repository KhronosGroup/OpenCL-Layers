name: Windows

on: [push, pull_request]

jobs:
  msvc:
    runs-on: windows-2022
    container: streamhpc/opencl-sdk-intelcpu:windows-servercore2019-20220202
    strategy:
      matrix:
        VER: [v141] # , v142, v143
        EXT: [OFF]
        GEN: [Visual Studio 17 2022] # , Ninja Multi-Config
        BIN: [x64] # , x86
        CMAKE: [3.22.0]
    env:
      CMAKE_EXE: C:\Tools\Kitware\CMake\${{matrix.CMAKE}}\bin\cmake.exe
      CTEST_EXE: C:\Tools\Kitware\CMake\${{matrix.CMAKE}}\bin\ctest.exe

    steps:
    - name: Checkout OpenCL-Layers
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Checkout OpenCL-Headers
      uses: actions/checkout@v2
      with:
        repository: KhronosGroup/OpenCL-Headers
        path: external/OpenCL-Headers

    - name: Checkout OpenCL-ICD-Loader
      uses: actions/checkout@v2
      with:
        repository: KhronosGroup/OpenCL-ICD-Loader
        path: external/OpenCL-ICD-Loader

    - name: Create Build Environment
      shell: powershell
      run: |
        Get-Item C:\Tools\Intel\oclcpuexp\intelocl64.dll | Select-Object -ExpandProperty VersionInfo
        Get-Item HKLM:\SOFTWARE\Khronos\OpenCL\Vendors
        & ${env:CMAKE_EXE} --version
        & ${env:NINJA_EXE} --version

    - name: Build & install OpenCL-Headers (MSBuild)
      if: matrix.GEN == 'Visual Studio 17 2022'
      shell: powershell
      run: |
        $C_FLAGS = '/w'
        $BIN = if('${{matrix.BIN}}'=='x86') {'Win32'} else {'x64'}
        & ${env:CMAKE_EXE} `
          -G '${{matrix.GEN}}'' `
          -A %BIN% `
          -T ${{matrix.VER}} `
          -D CMAKE_C_FLAGS=$C_FLAGS `
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} `
          -D CMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}\external\OpenCL-Headers\install `
          -S ${GITHUB_WORKSPACE}\external\OpenCL-Headers `
          -B ${GITHUB_WORKSPACE}\external\OpenCL-Headers\build
        & ${env:CMAKE_EXE} `
          --build ${GITHUB_WORKSPACE}/external/OpenCL-Headers/build `
          --target install `
          --config Release `
          -- `
          /verbosity:minimal `
          /maxCpuCount `
          /noLogo

    - name: Build & install OpenCL-Headers (Ninja Multi-Config)
      if: matrix.GEN == 'Ninja Multi-Config'
      shell: cmd
      run: |
        set C_FLAGS="/w"
        if /I "${{matrix.VER}}"=="v140" (set VER=14.0)
        if /I "${{matrix.VER}}"=="v141" (set VER=14.1)
        if /I "${{matrix.VER}}"=="v142" (set VER=14.2)
        if /I "${{matrix.VER}}"=="v143" (set VER=14.3)
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{matrix.BIN}} /vcvars_ver=%VER%
        %CMAKE_EXE% ^
          -G "${{matrix.GEN}}" ^
          -D CMAKE_MAKE_PROGRAM=%NINJA_EXE% ^
          -D CMAKE_C_FLAGS=%C_FLAGS% ^
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} ^
          -D CMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\external\OpenCL-Headers\install ^
          -S %GITHUB_WORKSPACE%\external\OpenCL-Headers ^
          -B %GITHUB_WORKSPACE%\external\OpenCL-Headers\build
        %CMAKE_EXE% ^
          --build %GITHUB_WORKSPACE%/external/OpenCL-Headers/build ^
          --target install ^
          -- ^
          -j%NUMBER_OF_PROCESSORS%

    - name: Build & install OpenCL-ICD-Loader (MSBuild)
      if: matrix.GEN == 'Visual Studio 17 2022'
      shell: cmd
      run: |
        set C_FLAGS="/w"
        if /I "${{matrix.BIN}}"=="x86" (set BIN=Win32) else (set BIN=x64)
        %CMAKE_EXE% ^
          -G "${{matrix.GEN}}" ^
          -A %BIN% ^
          -T ${{matrix.VER}} ^
          -D OPENCL_ICD_LOADER_BUILD_TESTING=OFF ^
          -D BUILD_TESTING=OFF ^
          -D CMAKE_C_FLAGS=%C_FLAGS% ^
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} ^
          -D CMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader\install ^
          -D CMAKE_PREFIX_PATH=%GITHUB_WORKSPACE%\external\OpenCL-Headers\install ^
          -S %GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader ^
          -B %GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader\build
        %CMAKE_EXE% ^
          --build %GITHUB_WORKSPACE%/external/OpenCL-ICD-Loader/build ^
          --target install ^
          --config Release ^
          -- ^
          /verbosity:minimal ^
          /maxCpuCount ^
          /noLogo

    - name: Build & install OpenCL-ICD-Loader (Ninja Multi-Config)
      if: matrix.GEN == 'Ninja Multi-Config'
      shell: cmd
      run: |
        set C_FLAGS="/w"
        if /I "${{matrix.VER}}"=="v140" (set VER=14.0)
        if /I "${{matrix.VER}}"=="v141" (set VER=14.1)
        if /I "${{matrix.VER}}"=="v142" (set VER=14.2)
        if /I "${{matrix.VER}}"=="v143" (set VER=14.3)
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{matrix.BIN}} /vcvars_ver=%VER%
        %CMAKE_EXE% ^
          -G "${{matrix.GEN}}" ^
          -D OPENCL_ICD_LOADER_BUILD_TESTING=OFF ^
          -D BUILD_TESTING=OFF ^
          -D CMAKE_MAKE_PROGRAM=%NINJA_EXE% ^
          -D CMAKE_C_FLAGS=%C_FLAGS% ^
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} ^
          -D CMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader\install ^
          -D CMAKE_PREFIX_PATH=%GITHUB_WORKSPACE%\external\OpenCL-Headers\install ^
          -S %GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader ^
          -B %GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader\build
        %CMAKE_EXE% ^
          --build %GITHUB_WORKSPACE%/external/OpenCL-ICD-Loader/build ^
          --target install ^
          --config Release ^
          -- ^
          -j%NUMBER_OF_PROCESSORS%

    - name: Configure (MSBuild)
      if: matrix.GEN == 'Visual Studio 17 2022'
      shell: cmd
      # no /WX during configuration because:
      # warning C4459: declaration of 'platform' hides global declaration
      # warning C4100: 'input_headers': unreferenced formal parameter
      run: |
        set C_FLAGS="/W4 /MP"
        set CXX_FLAGS="/W4 /MP"
        if /I "${{matrix.BIN}}"=="x86" (set BIN=Win32) else (set BIN=x64)
        %CMAKE_EXE% ^
          -G "${{matrix.GEN}}" ^
          -A %BIN% ^
          -T ${{matrix.VER}} ^
          -D OPENCL_LAYERS_BUILD_TESTING=ON ^
          -D BUILD_TESTING=ON ^
          -D CMAKE_C_FLAGS=%C_FLAGS% ^
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} ^
          -D CMAKE_CXX_FLAGS=%CXX_FLAGS% ^
          -D CMAKE_CXX_EXTENSIONS=${{matrix.EXT}} ^
          -D CMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\install ^
          -D CMAKE_PREFIX_PATH="%GITHUB_WORKSPACE%\external\OpenCL-Headers\install;%GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader\install" ^
          -S %GITHUB_WORKSPACE% ^
          -B %GITHUB_WORKSPACE%\build

    - name: Configure (Ninja Multi-Config)
      if: matrix.GEN == 'Ninja Multi-Config'
      shell: cmd
      # no /WX during configuration because:
      # warning C4459: declaration of 'platform' hides global declaration
      # warning C4100: 'input_headers': unreferenced formal parameter
      run: |
        set C_FLAGS="/W4"
        if /I "${{matrix.VER}}"=="v140" (set VER=14.0)
        if /I "${{matrix.VER}}"=="v141" (set VER=14.1)
        if /I "${{matrix.VER}}"=="v142" (set VER=14.2)
        if /I "${{matrix.VER}}"=="v143" (set VER=14.3)
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{matrix.BIN}} /vcvars_ver=%VER%
        %CMAKE_EXE% ^
          -G "${{matrix.GEN}}" ^
          -D CMAKE_MAKE_PROGRAM=%NINJA_EXE% ^
          -D OPENCL_LAYERS_BUILD_TESTING=ON ^
          -D BUILD_TESTING=ON ^
          -D CMAKE_C_FLAGS=%C_FLAGS% ^
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} ^
          -D CMAKE_CXX_FLAGS=%CXX_FLAGS% ^
          -D CMAKE_CXX_EXTENSIONS=${{matrix.EXT}} ^
          -D CMAKE_EXE_LINKER_FLAGS=/INCREMENTAL ^
          -D CMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\install ^
          -D CMAKE_PREFIX_PATH="%GITHUB_WORKSPACE%\external\OpenCL-Headers\install;%GITHUB_WORKSPACE%\external\OpenCL-ICD-Loader\install" ^
          -S %GITHUB_WORKSPACE% ^
          -B %GITHUB_WORKSPACE%\build

    - name: Build (MSBuild)
      if: matrix.GEN == 'Visual Studio 17 2022'
      shell: cmd
      run: |
        %CMAKE_EXE% --build %GITHUB_WORKSPACE%\build --config Release -- /verbosity:minimal /maxCpuCount /noLogo
        %CMAKE_EXE% --build %GITHUB_WORKSPACE%\build --config Debug -- /verbosity:minimal /maxCpuCount /noLogo

    - name: Build (Ninja)
      if: matrix.GEN == 'Ninja Multi-Config'
      shell: cmd
      run: |
        if /I "${{matrix.VER}}"=="v140" set VER=14.0
        if /I "${{matrix.VER}}"=="v141" set VER=14.1
        if /I "${{matrix.VER}}"=="v142" set VER=14.2
        if /I "${{matrix.VER}}"=="v143" set VER=14.3
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{matrix.BIN}} /vcvars_ver=%VER%
        %CMAKE_EXE% --build %GITHUB_WORKSPACE%\build --config Release
        %CMAKE_EXE% --build %GITHUB_WORKSPACE%\build --config Debug
